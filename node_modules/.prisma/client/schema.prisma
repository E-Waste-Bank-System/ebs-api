generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String        @unique
  password     String
  role         Role          @default(USER)
  isBlocked    Boolean       @default(false)
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  ewastes      Ewaste[]
  transactions Transaction[]
  schedules    Schedule[]
}

model Ewaste {
  id              String       @id @default(uuid())
  userId          String
  user            User         @relation(fields: [userId], references: [id])
  category        String
  weight          Float
  status          EwasteStatus @default(PENDING)
  image           String
  rejectionReason String?
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  transaction     Transaction?
}

model Transaction {
  id         String            @id @default(uuid())
  ewasteId   String            @unique
  ewaste     Ewaste            @relation(fields: [ewasteId], references: [id])
  userId     String
  user       User              @relation(fields: [userId], references: [id])
  totalPrice Float
  status     TransactionStatus @default(PENDING)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  schedule   Schedule?
}

model Schedule {
  id            String         @id @default(uuid())
  transactionId String         @unique
  transaction   Transaction    @relation(fields: [transactionId], references: [id])
  userId        String
  user          User           @relation(fields: [userId], references: [id])
  pickupDate    DateTime
  pickupType    PickupType
  status        ScheduleStatus @default(PENDING)
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Content {
  id        String      @id @default(uuid())
  title     String
  body      String
  type      ContentType
  imageUrl  String?
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
}

enum Role {
  USER
  ADMIN
}

enum EwasteStatus {
  PENDING
  APPROVED
  REJECTED
  PROCESSED
}

enum TransactionStatus {
  PENDING
  PAID
  COMPLETED
  CANCELLED
}

enum ScheduleStatus {
  PENDING
  CONFIRMED
  COMPLETED
  CANCELLED
}

enum PickupType {
  HOME
  DROP_POINT
}

enum ContentType {
  ARTICLE
  TUTORIAL
  NEWS
}
